class Integrate(object):
#   Here f is a function to be Integrated, b is final and a is initial point of limit of Definate Integral.

    def trapezoid(self, a, b, f, n=100):
        h = float(b - a) / n
        s = 0.0
        s += f(a)/2.0
        for i in range(1, n):
            s += f(a + i*h)
        s += f(b)/2.0
        return s * h
    
        
    def simpson(self, a, b, f, n=100):
        if n & 1:
            print ("Error: n is zero which is not allowed")
            return 0.0
    
        h = float(b - a) / n
        integral = 0.0

        x = float(a)
        for i in range(0, n / 2):
            integral += f(x) + (2.0 * f(x + h))
            x += 2 * h
    
        integral = (2.0 * integral) - f(a) + f(b)
        integral = h * integral / 3.0
        return integral
        
        
    def solve(self,method, a, b, f, n=100):
        if method=='trapezoid':
            return self.trapezoid(a, b, f, n)
        elif method== 'simpson':
            return self.simpson(a, b, f, n)
        
